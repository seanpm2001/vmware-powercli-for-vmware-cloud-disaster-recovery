{
  "runtime": "NetCore31",
  "defaultVariables": null,
  "documentGenerator": {
    "fromDocument": {
      "json": "openapi: 3.0.3\r\ninfo:\r\n  description: VCDR Backend Public APIs.\r\n  version: '1.1' \r\n  title: VCDR Backend Public APIs\r\n  contact:\r\n    name: VMware\r\n  license:\r\n    name: Copyright (c) 2021 VMware, Inc. All rights reserved.\r\n  x-vmw-vapi-codegenconfig:\r\n    package-name: com.vmware.vcdr\r\n    tag-resources-by-url-path: true\r\n \r\nsecurity:\r\n  - api_key: []  \r\n\r\nservers:\r\n  - description: VCDR production backend\r\n    url: 'https://vcdrsp-prd-vcdr-backend-res01-prd-us-west-2.vdp.vmware.com/api/vcdr' \r\nschemes:\r\n  - https\r\ntags:\r\n  - name: vcdr-org\r\n    description: 'CSP Org related APIs (Query VCDR tenant orgs, Service Instances etc.,)'\r\npaths:\r\n  /org/{org-id}/deployments:\r\n    get:\r\n      tags:\r\n        - vcdr-org\r\n      summary: Get all Deployments in given org\r\n      description: Get all Deployments in given org\r\n      operationId: getDeployments\r\n      parameters:\r\n        - name: org-id\r\n          in: path\r\n          description: ORG identifier\r\n          required: true\r\n          example: 55f1a417-1c88-4bc0-aa38-5edb7ab6b47a\r\n          schema:\r\n            type: string  \r\n      responses:\r\n        '200':\r\n          description: OK\r\n          content:\r\n            application/json:\r\n              schema:\r\n                type: array\r\n                items:\r\n                  $ref: '#/components/schemas/TenantDeployment'\r\n        '400':\r\n          description: Bad Request\r\n        '401':\r\n          description: Unauthorized\r\n        '403':\r\n          description: Forbidden\r\n        '500':\r\n          description: Internal Server Error\r\n          \r\n  \r\ncomponents:\r\n  securitySchemes:\r\n    api_key:\r\n      type: apiKey\r\n      description: 'In order to make VMware Cloud Disaster Recovery REST API calls, you need to authenticate with the Cloud Services Platform, which will exchange an API token for an access token. This access token must be provided in the header for al VCDR REST API calls.<p>'\r\n      in: header\r\n      name: csp-auth-token\r\n      \r\n  parameters:\r\n    orgIdPathParam:\r\n      name: org-id\r\n      in: path\r\n      description: organization identifier\r\n      required: true\r\n      schema:\r\n        type: string\r\n        format: uuid\r\n      \r\n  schemas:\r\n    TenantOrchestratorConfig:\r\n      title: >-\r\n        Deployment configuration for VCDR orchestrator (Control Shift / IRR)\r\n        exposed to Tenants.\r\n      type: object\r\n      properties:\r\n        ip:\r\n          type: string\r\n          description: VCDR gateway IP.\r\n          example: 72.34.122.1\r\n        url:\r\n          type: string\r\n          description: VCDR gateway URL.\r\n          example: https://foobar-1234.vcdr.vmware.com\r\n    TenantCloudProviderConfig:\r\n      title: Cloud Provider config in Deployment exposed to Tenants\r\n      type: object\r\n      required:\r\n        - provider\r\n        - region\r\n      properties:\r\n        provider:\r\n          $ref: '#/components/schemas/CloudProvidersEnum'\r\n        region:\r\n          type: string\r\n          nullable: true\r\n          description: Cloud Provider Region ID in which deployment was requested\r\n          example: us-west-2\r\n    TenantDeploymentConfig:\r\n      title: Deployment configurations exposed to Tenant\r\n      type: object\r\n      properties:\r\n        subscription_info:\r\n          $ref: '#/components/schemas/SubscriptionConfig'\r\n        cloud_provider:\r\n          $ref: '#/components/schemas/TenantCloudProviderConfig'\r\n        orchestrator:\r\n          $ref: '#/components/schemas/TenantOrchestratorConfig'\r\n    TenantDeploymentSpec:\r\n      title: Deployment specification in Tenant org\r\n      type: object\r\n      required:\r\n        - type\r\n        - provider\r\n        - region\r\n      properties:\r\n        name:\r\n          type: string\r\n          description: Name of deployment\r\n          maxLength: 127\r\n          example: VCDR (us-west-2)\r\n        type:\r\n          $ref: '#/components/schemas/DeploymentTypesEnum'\r\n        provider:\r\n          $ref: '#/components/schemas/CloudProvidersEnum'\r\n        region:\r\n          type: string\r\n          nullable: true\r\n          description: Cloud Provider Region ID\r\n          example: us-west-2\r\n        seller:\r\n          $ref: '#/components/schemas/SellerOfRecordEnum'\r\n  \r\n    DeploymentTypesEnum:\r\n      title: Deployment Types\r\n      type: string\r\n      enum:\r\n        - VCDR\r\n      example: VCDR\r\n    CloudProvidersEnum:\r\n      title: Cloud Provider Types\r\n      type: string\r\n      enum:\r\n        - AWS\r\n        - MOCK\r\n      example: AWS\r\n    SellerOfRecordEnum:\r\n      title: Seller Of Records\r\n      type: string\r\n      enum:\r\n        - VMWARE\r\n        - AWS\r\n        - INACTIVE_SELLER\r\n      example: VMWARE\r\n    SubscriptionConfig:\r\n      title: Subscription config in Deployment\r\n      type: object\r\n      properties:\r\n        paid_pilot:\r\n          type: boolean\r\n          nullable: true\r\n          description: Whether Paid pilot was activated during deployment\r\n          example: false\r\n        term_subscription:\r\n          type: boolean\r\n          nullable: true\r\n          description: Whether TERM subscription is activated in given geo\r\n          example: false\r\n    DeploymentStatesEnum:\r\n      title: Deployment States\r\n      type: string\r\n      enum:\r\n        - IN_PROGRESS\r\n        - READY\r\n        - FAILED\r\n        - DELETION_REQUESTED\r\n        - DELETING\r\n        - DELETION_WAITING_APPROVAL\r\n        - DELETION_FAILED\r\n        - DELETED\r\n      example: IN_PROGRESS\r\n    TenantDeployment:\r\n      title: Deployment info exposed to Tenant orgs\r\n      type: object\r\n      required:\r\n        - id\r\n        - type\r\n        - state\r\n        - spec\r\n        - start_time\r\n        - created_by\r\n        - org_id\r\n      properties: # TODO Add TenantDeploymentSpec after changing schema\r\n        id:\r\n          type: string\r\n          format: uuid\r\n          description: Deployment ID\r\n          example: b25fa423-1800-4ffb-b7cf-0ea4d0bd75b2\r\n        type:\r\n          $ref: '#/components/schemas/DeploymentTypesEnum'\r\n        state:\r\n          $ref: '#/components/schemas/DeploymentStatesEnum'\r\n        spec:\r\n          $ref: '#/components/schemas/TenantDeploymentSpec'\r\n        start_time:\r\n          description: Time at which Deployment started\r\n          type: string\r\n          format: 'date-time'\r\n          example: \"2021-11-02T23:20:15Z\"\r\n        end_time:\r\n          description: Time at which Deployment completed\r\n          type: string\r\n          format: 'date-time'\r\n          example: \"2021-11-02T23:23:12Z\"\r\n          nullable: true\r\n        deletion_requested_time:\r\n          description: Time at which deployment deletion is requested.\r\n          type: string\r\n          format: 'date-time'\r\n          example: \"2021-11-03T23:23:12Z\"\r\n          nullable: true\r\n        config:\r\n          $ref: '#/components/schemas/TenantDeploymentConfig'\r\n        created_by:\r\n          type: string\r\n          description: User who created the deployment.\r\n          example: \"user1@acme.com\"\r\n        deletion_requested_by:\r\n          type: string\r\n          description: User who requested to delete deployment.\r\n          example: \"user2@acme.com\"\r\n          nullable: true\r\n        org_id:\r\n          type: string\r\n          description: Org id\r\n          example: 1a2ef44d-ccb6-408d-bbbe-8e374a17afc1",
      "url": "http://redocly.github.io/redoc/openapi.yaml",
      "output": null,
      "newLineBehavior": "Auto"
    }
  },
  "codeGenerators": {
    "openApiToCSharpClient": {
      "clientBaseClass": null,
      "configurationClass": null,
      "generateClientClasses": true,
      "generateClientInterfaces": false,
      "clientBaseInterface": null,
      "injectHttpClient": true,
      "disposeHttpClient": true,
      "protectedMethods": [],
      "generateExceptionClasses": false,
      "exceptionClass": "ApiException",
      "wrapDtoExceptions": true,
      "useHttpClientCreationMethod": false,
      "httpClientType": "System.Net.Http.HttpClient",
      "useHttpRequestMessageCreationMethod": false,
      "useBaseUrl": true,
      "generateBaseUrlProperty": true,
      "generateSyncMethods": true,
      "generatePrepareRequestAndProcessResponseAsAsyncMethods": false,
      "exposeJsonSerializerSettings": false,
      "clientClassAccessModifier": "public",
      "typeAccessModifier": "public",
      "generateContractsOutput": false,
      "contractsNamespace": null,
      "contractsOutputFilePath": null,
      "parameterDateTimeFormat": "s",
      "parameterDateFormat": "yyyy-MM-dd",
      "generateUpdateJsonSerializerSettingsMethod": true,
      "useRequestAndResponseSerializationSettings": false,
      "serializeTypeInformation": false,
      "queryNullValue": "",
      "className": "{controller}VcdrBackendPlatform",
      "operationGenerationMode": "MultipleClientsFromOperationId",
      "additionalNamespaceUsages": [],
      "additionalContractNamespaceUsages": [],
      "generateOptionalParameters": false,
      "generateJsonMethods": false,
      "enforceFlagEnums": false,
      "parameterArrayType": "System.Collections.Generic.IEnumerable",
      "parameterDictionaryType": "System.Collections.Generic.IDictionary",
      "responseArrayType": "System.Collections.Generic.ICollection",
      "responseDictionaryType": "System.Collections.Generic.IDictionary",
      "wrapResponses": false,
      "wrapResponseMethods": [],
      "generateResponseClasses": true,
      "responseClass": "SwaggerResponse",
      "namespace": "VMware.VCDRService",
      "requiredPropertiesMustBeDefined": true,
      "dateType": "System.DateTimeOffset",
      "jsonConverters": null,
      "anyType": "object",
      "dateTimeType": "System.DateTimeOffset",
      "timeType": "System.TimeSpan",
      "timeSpanType": "System.TimeSpan",
      "arrayType": "System.Collections.Generic.ICollection",
      "arrayInstanceType": "System.Collections.ObjectModel.Collection",
      "dictionaryType": "System.Collections.Generic.IDictionary",
      "dictionaryInstanceType": "System.Collections.Generic.Dictionary",
      "arrayBaseType": "System.Collections.ObjectModel.Collection",
      "dictionaryBaseType": "System.Collections.Generic.Dictionary",
      "classStyle": "Poco",
      "jsonLibrary": "NewtonsoftJson",
      "generateDefaultValues": true,
      "generateDataAnnotations": true,
      "excludedTypeNames": [],
      "excludedParameterNames": [],
      "handleReferences": false,
      "generateImmutableArrayProperties": false,
      "generateImmutableDictionaryProperties": false,
      "jsonSerializerSettingsTransformationMethod": null,
      "inlineNamedArrays": false,
      "inlineNamedDictionaries": false,
      "inlineNamedTuples": true,
      "inlineNamedAny": false,
      "generateDtoTypes": true,
      "generateOptionalPropertiesAsNullable": false,
      "generateNullableReferenceTypes": false,
      "templateDirectory": null,
      "typeNameGeneratorType": null,
      "propertyNameGeneratorType": null,
      "enumNameGeneratorType": null,
      "serviceHost": null,
      "serviceSchemes": null,
      "output": null,
      "newLineBehavior": "Auto"
    }
  }
}